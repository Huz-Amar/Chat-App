{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Huzaifa\\\\Documents\\\\Fall 2020\\\\SENG 513\\\\Assignment3\\\\Chat-App\\\\client-side\\\\src\\\\components\\\\chatApp\\\\chatApp.jsx\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport MessageArea from '../messageArea/messageArea';\nimport \"./chatApp.css\";\nimport OnlineUsers from './../onlineUsers/onlineUsers';\n\nclass ChatApp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // array of objects as follows:\n      //{chatMessage, timestamp}\n      messages: [],\n      username: \"\",\n      namesOfOtherUsers: []\n    };\n  }\n\n  componentDidMount() {\n    this.socket = socketIOClient();\n    this.socket.on(\"username\", (username, allUsers) => {\n      const namesOfOtherUsers = allUsers.filter(user => {\n        user !== username;\n      });\n      this.setState({\n        username: username,\n        namesOfOtherUsers: namesOfOtherUsers\n      });\n    });\n    this.socket.on(\"chat message\", socketMsg => {\n      console.log(\"Message recieved: \", socketMsg);\n      const messageArray = this.state.messages;\n      messageArray.push(socketMsg);\n      this.setState({\n        messages: messageArray\n      });\n    });\n    this.socket.on(\"single timestamp\", (timeStamp, usersMessage) => {\n      console.log(\"Single timestamp recieved\");\n      const messageArray = this.state.messages;\n      messageArray.push({\n        chatMessage: usersMessage,\n        timestamp: timeStamp\n      });\n      this.setState({\n        messages: messageArray\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n  } // responsible for sending messages to server\n\n\n  handleSendingMessages(message) {\n    console.log(\"Action Recognized --> \", message);\n\n    if (message) {\n      this.socket.emit(\"single timestamp\", message);\n      this.socket.emit(\"chat message\", message);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(MessageArea, {\n        messages: this.state.messages,\n        onMessage: msg => this.handleSendingMessages(msg)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OnlineUsers, {\n        username: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ChatApp;","map":{"version":3,"sources":["C:/Users/Huzaifa/Documents/Fall 2020/SENG 513/Assignment3/Chat-App/client-side/src/components/chatApp/chatApp.jsx"],"names":["React","Component","socketIOClient","MessageArea","OnlineUsers","ChatApp","constructor","state","messages","username","namesOfOtherUsers","componentDidMount","socket","on","allUsers","filter","user","setState","socketMsg","console","log","messageArray","push","timeStamp","usersMessage","chatMessage","timestamp","componentWillUnmount","close","handleSendingMessages","message","emit","render","msg"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC5BK,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACT;AACA;AACAC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,iBAAiB,EAAE;AALV,KAAb;AAOH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,MAAL,GAAcV,cAAc,EAA5B;AAEA,SAAKU,MAAL,CAAYC,EAAZ,CAAe,UAAf,EAA2B,CAACJ,QAAD,EAAWK,QAAX,KAAwB;AAC/C,YAAMJ,iBAAiB,GAAGI,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAI;AAC9CA,QAAAA,IAAI,KAAKP,QAAT;AACH,OAFyB,CAA1B;AAGA,WAAKQ,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAEA,QAAX;AAAqBC,QAAAA,iBAAiB,EAAEA;AAAxC,OAAd;AACH,KALD;AAOA,SAAKE,MAAL,CAAYC,EAAZ,CAAe,cAAf,EAA+BK,SAAS,IAAI;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,SAAlC;AACA,YAAMG,YAAY,GAAG,KAAKd,KAAL,CAAWC,QAAhC;AACAa,MAAAA,YAAY,CAACC,IAAb,CAAkBJ,SAAlB;AACA,WAAKD,QAAL,CAAc;AAACT,QAAAA,QAAQ,EAAEa;AAAX,OAAd;AACH,KALD;AAOA,SAAKT,MAAL,CAAYC,EAAZ,CAAe,kBAAf,EAAmC,CAACU,SAAD,EAAYC,YAAZ,KAA6B;AAC5DL,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,YAAMC,YAAY,GAAG,KAAKd,KAAL,CAAWC,QAAhC;AACAa,MAAAA,YAAY,CAACC,IAAb,CAAkB;AAACG,QAAAA,WAAW,EAAED,YAAd;AAA4BE,QAAAA,SAAS,EAAEH;AAAvC,OAAlB;AACA,WAAKN,QAAL,CAAc;AAACT,QAAAA,QAAQ,EAAEa;AAAX,OAAd;AACH,KALD;AAMH;;AAEDM,EAAAA,oBAAoB,GAAG;AACnB,SAAKf,MAAL,CAAYgB,KAAZ;AACH,GAvC2B,CAyC5B;;;AACAC,EAAAA,qBAAqB,CAACC,OAAD,EAAU;AAC3BX,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCU,OAAtC;;AACA,QAAIA,OAAJ,EAAa;AACT,WAAKlB,MAAL,CAAYmB,IAAZ,CAAiB,kBAAjB,EAAqCD,OAArC;AACA,WAAKlB,MAAL,CAAYmB,IAAZ,CAAiB,cAAjB,EAAiCD,OAAjC;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWC,QAAlC;AAA4C,QAAA,SAAS,EAAGyB,GAAD,IAAS,KAAKJ,qBAAL,CAA2BI,GAA3B;AAAhE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWE;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAzD2B;;AA4DhC,eAAeJ,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport MessageArea from '../messageArea/messageArea';\r\nimport \"./chatApp.css\";\r\nimport OnlineUsers from './../onlineUsers/onlineUsers';\r\n\r\nclass ChatApp extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            // array of objects as follows:\r\n            //{chatMessage, timestamp}\r\n            messages: [],\r\n            username: \"\",\r\n            namesOfOtherUsers: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.socket = socketIOClient();\r\n\r\n        this.socket.on(\"username\", (username, allUsers) => {\r\n            const namesOfOtherUsers = allUsers.filter(user => {\r\n                user !== username;\r\n            });\r\n            this.setState({username: username, namesOfOtherUsers: namesOfOtherUsers});\r\n        });\r\n        \r\n        this.socket.on(\"chat message\", socketMsg => {\r\n            console.log(\"Message recieved: \", socketMsg)\r\n            const messageArray = this.state.messages;\r\n            messageArray.push(socketMsg);\r\n            this.setState({messages: messageArray});\r\n        });\r\n\r\n        this.socket.on(\"single timestamp\", (timeStamp, usersMessage) => {\r\n            console.log(\"Single timestamp recieved\");\r\n            const messageArray = this.state.messages;\r\n            messageArray.push({chatMessage: usersMessage, timestamp: timeStamp});\r\n            this.setState({messages: messageArray});\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.socket.close();\r\n    }\r\n\r\n    // responsible for sending messages to server\r\n    handleSendingMessages(message) {\r\n        console.log(\"Action Recognized --> \", message)\r\n        if (message) {\r\n            this.socket.emit(\"single timestamp\", message);\r\n            this.socket.emit(\"chat message\", message);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <MessageArea messages={this.state.messages} onMessage={(msg) => this.handleSendingMessages(msg)}/>\r\n                <OnlineUsers username={this.state.username}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChatApp;\r\n"]},"metadata":{},"sourceType":"module"}