{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Huzaifa\\\\Documents\\\\Fall 2020\\\\SENG 513\\\\Assignment3\\\\Chat-App\\\\client-side\\\\src\\\\components\\\\chatApp\\\\chatApp.jsx\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport MessageArea from '../messageArea/messageArea';\nimport \"./chatApp.css\";\nimport OnlineUsers from './../onlineUsers/onlineUsers';\n\nclass ChatApp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // structure --> {chatMessage, timestamp, username}\n      messages: [],\n      username: \"\",\n      color: \"\",\n      // structure --> {username, color}\n      otherUsers: []\n    };\n  }\n\n  componentDidMount() {\n    this.socket = socketIOClient();\n    this.socket.on(\"own username\", (username, defaultColor) => {\n      this.setState({\n        username: username,\n        color: defaultColor\n      });\n    });\n    this.socket.on(\"other users' names\", allUsers => {\n      const otherUsers = this.filterAllUsers(allUsers);\n      this.setState({\n        otherUsers: otherUsers\n      });\n    });\n    this.socket.on(\"chat message\", socketMsg => {\n      console.log(\"Message recieved: \", socketMsg);\n      const messageArray = this.state.messages;\n      messageArray.push(socketMsg);\n      this.setState({\n        messages: messageArray\n      });\n    });\n    this.socket.on(\"change own color\", color => {\n      this.setState({\n        color: color\n      });\n    });\n    this.socket.on(\"change color\", allUsers => {\n      const otherUsers = this.filterAllUsers(allUsers);\n      this.setState({\n        otherUsers: otherUsers\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n  } // filters incoming user data to exclude own\n\n\n  filterAllUsers(allUsers) {\n    return allUsers.filter(user => user.username !== this.state.username);\n  } // responsible for sending messages to server\n\n\n  handleSendingMessages(message) {\n    console.log(\"Action Recognized --> \", message);\n\n    if (message) {\n      if (this.isColorCommand(message)) {\n        this.socket.emit(\"change color\", message.split(\" \")[1]);\n      } else {\n        this.socket.emit(\"chat message\", message, this.state.username, this.state.color);\n      }\n    }\n  } // check for commands + handle commands\n\n\n  isColorCommand(message) {\n    const commandString = message.split(\" \");\n    if (commandString.length === 2 && commandString[0].slice(0, 6) === \"/color\") return true;\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(MessageArea, {\n        username: this.state.username,\n        messages: this.state.messages,\n        onMessage: msg => this.handleSendingMessages(msg)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OnlineUsers, {\n        username: this.state.username,\n        color: this.state.color,\n        otherUsers: this.state.otherUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ChatApp;","map":{"version":3,"sources":["C:/Users/Huzaifa/Documents/Fall 2020/SENG 513/Assignment3/Chat-App/client-side/src/components/chatApp/chatApp.jsx"],"names":["React","Component","socketIOClient","MessageArea","OnlineUsers","ChatApp","constructor","state","messages","username","color","otherUsers","componentDidMount","socket","on","defaultColor","setState","allUsers","filterAllUsers","socketMsg","console","log","messageArray","push","componentWillUnmount","close","filter","user","handleSendingMessages","message","isColorCommand","emit","split","commandString","length","slice","render","msg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport MessageArea from '../messageArea/messageArea';\r\nimport \"./chatApp.css\";\r\nimport OnlineUsers from './../onlineUsers/onlineUsers';\r\n\r\nclass ChatApp extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            // structure --> {chatMessage, timestamp, username}\r\n            messages: [],\r\n            username: \"\",\r\n            color: \"\",\r\n            // structure --> {username, color}\r\n            otherUsers: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.socket = socketIOClient();\r\n\r\n        this.socket.on(\"own username\", (username, defaultColor) => {\r\n            this.setState({username: username, color: defaultColor});\r\n        });\r\n\r\n        this.socket.on(\"other users' names\", allUsers => {\r\n            const otherUsers = this.filterAllUsers(allUsers);\r\n            this.setState({otherUsers: otherUsers});\r\n        });\r\n        \r\n        this.socket.on(\"chat message\", socketMsg => {\r\n            console.log(\"Message recieved: \", socketMsg)\r\n            const messageArray = this.state.messages;\r\n            messageArray.push(socketMsg);\r\n            this.setState({messages: messageArray});\r\n        });\r\n\r\n        this.socket.on(\"change own color\", color => {\r\n            this.setState({color: color});\r\n        });\r\n\r\n        this.socket.on(\"change color\", allUsers => {\r\n            const otherUsers = this.filterAllUsers(allUsers);\r\n            this.setState({otherUsers: otherUsers});\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.socket.close();\r\n    }\r\n\r\n    // filters incoming user data to exclude own\r\n    filterAllUsers(allUsers) {\r\n        return allUsers.filter(user => user.username !== this.state.username);\r\n    }\r\n\r\n    // responsible for sending messages to server\r\n    handleSendingMessages(message) {\r\n        console.log(\"Action Recognized --> \", message)\r\n        if (message) {\r\n            if (this.isColorCommand(message)) {\r\n                this.socket.emit(\"change color\", message.split(\" \")[1])\r\n            }\r\n            else {\r\n                this.socket.emit(\"chat message\", message, this.state.username, this.state.color);\r\n            }\r\n        }\r\n    }\r\n\r\n    // check for commands + handle commands\r\n    isColorCommand(message) {\r\n        const commandString = message.split(\" \");\r\n        if (commandString.length === 2 && commandString[0].slice(0, 6) === \"/color\")\r\n            return true;\r\n        return false; \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <MessageArea username={this.state.username} messages={this.state.messages} onMessage={(msg) => this.handleSendingMessages(msg)}/>\r\n                <OnlineUsers username={this.state.username} color={this.state.color} otherUsers={this.state.otherUsers}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChatApp;\r\n"]},"metadata":{},"sourceType":"module"}